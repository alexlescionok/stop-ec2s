name: Terraform Plan, Python Lint, and PyTest

on:
  pull_request:
    paths:
      - 'terraform/**'
      - 'src/**'
      - 'tests/**'
  workflow_dispatch:

jobs:
  python-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - name: Run Ruff
        uses: astral-sh/ruff-action@v3

  pytest:
    runs-on: ubuntu-latest
    needs: [python-lint]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r ./src/requirements.txt
      - name: Run PyTest
        working-directory: tests
        run: |
          pytest --maxfail=0 --disable-warnings -q
  
  terraform-plan:
    runs-on: ubuntu-latest
    needs: [python-lint, pytest]
    steps:
      - name: Set up Terraform 1.11.0
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.11.0"
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Run terraform init
        working-directory: terraform
        run: terraform init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "eu-west-1"
      - name: Run terraform plan
        working-directory: terraform
        run: terraform plan -no-color
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "eu-west-1"
